#What is mean total number of steps taken per day?
sumStepsDays<-with(data,tapply(steps,date,sum))
hist(sumStepsDays)
mean(sumStepsDays)
median(sumStepsDays)
## What is the average daily activity pattern?
averageStepsDays<-with(data,tapply(steps,interval,mean,na.rm = TRUE))
intervals<-unique(data$interval)
plot(intervals,averageStepsDays,type = "l")
title("average daily activity pattern")
averageStepsDays<-data.frame(averageStepsDays)
colnames(averageStepsDays)<-"Average"
maxSteps<-which.max(averageStepsDays$Average)
averageStepsDays[maxSteps,]
#modify missing values: stratergy is: use the mean/median for  that 5-minute interval, or the mean for that 5-minute interval, etc
#calcuate mean of everyday
Meansteps1Days<-with(data,tapply(steps,date,mean,na.rm = TRUE))
#adding missing data using sapply
#apply(data,1,function(x) if (x["steps"]==NA) x$steps=averageStepsDays[as.character(x$interval),"Average"]))
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["steps"]<-apply(data,1,FixMissing)
newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum))
hist(sumStepsDaysNew)
#data2<-apply(data,1,function(x) if(is.na(x["steps"])) print(averageStepsDays[as.character(x["interval"]),"Average"]))
#apply(data,1,function(x) if(is.na(x["steps"])) print("found"))
newData["Weekdays"]<-ifelse(weekdays(newData$date)=="Saturday" |weekdays(newData$date)=="Sunday","Weekend","weekdays")
#calculate weekday average
newData<-data.frame(newData)
weekMean<-aggregate(x=newData$steps,by=list(interval=newData$interval, Weekdays=newData$Weekdays), FUN=mean)
library(ggplot2)
#ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+
#  xlab("5 minute interval") + ylab("average number of steps")
library(lattice)
xyplot(weekMean$x ~ weekMean$interval | weekMean$weekdays, weekMean, layout=c(1,2),
type="l",main = "Time Series Plot", xlab="5-minute Intervals", ylab="Avg Steps")
library(lattice)
xyplot(x ~ interval | weekdays, weekMean, layout=c(1,2),
type="l",main = "Time Series Plot", xlab="5-minute Intervals", ylab="Avg Steps")
library(ggplot2)
ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+ xlab("5 minute interval") + ylab("average number of steps")
library(ggplot2)
#library(lattice)
newData<-data.frame(newData)
newData["Weekdays"]<-ifelse(weekdays(newData$date)=="Saturday" |weekdays(newData$date)=="Sunday","Weekend","weekdays")
#newData<-data.frame(newData)
weekMean<-aggregate(x=newData$steps,by=list(interval=newData$interval, Weekdays=newData$Weekdays), FUN=mean)
#plot(weekMean$x,weekMean$interval)
xyplot(weekMean$x ~ weekMean$interval | weekMean$weekdays, weekMean, layout=c(1,2),
type="l",main = "Time Series Plot", xlab="5-minute Intervals", ylab="Avg Steps")
#ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+ xlab("5 minute interval") + ylab("average number of steps")
library(ggplot2)
newData<-data.frame(newData)
newData["Weekdays"]<-ifelse(weekdays(newData$date)=="Saturday" |weekdays(newData$date)=="Sunday","Weekend","weekdays")
weekMean<-aggregate(x=newData$steps,by=list(interval=newData$interval, Weekdays=newData$Weekdays), FUN=mean)
ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+ xlab("5 minute interval") + ylab("average number of steps")
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
data
zeroNA_steps<-apply(data,1,FixMissing)
#zeroNA_steps
zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
zeroNA_steps<-sapply(data,1,FixMissing)
zeroNA_steps
zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
zeroNA_steps<-sapply(data,1,FixMissing)
zeroNA_steps
#zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
zeroNA_steps<-sapply(data,1,FixMissing)
#zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
head(newData,10)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
zeroNA_steps<-lapply(data,1,FixMissing)
#zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
head(newData,10)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
rm(list=ls())
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
zeroNA_steps<-lapply(data,1,FixMissing)
#zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
head(newData,10)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
zeroNA_steps<-apply(data,1,FixMissing)
#zeroNA_steps<-as.numeric(zeroNA_steps)
zeroNA_steps<-data.frame(zeroNA_steps)
newData$steps<-zeroNA_steps$zeroNA_steps
newData$steps<-as.numeric(newData$steps)
head(newData,10)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData$steps<-apply(data,1,FixMissing)
#zeroNA_steps<-apply(data,1,FixMissing)
#head(zeroNA_steps,10)
#zeroNA_steps<-as.numeric(zeroNA_steps)
#zeroNA_steps<-data.frame(zeroNA_steps)
#newData$steps<-zeroNA_steps$zeroNA_steps
#newData$steps<-as.numeric(newData$steps)
#sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
#hist(sumStepsDaysNew)
#meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
#medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
head(newData,10)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["steps"]<-apply(data,1,FixMissing)
#zeroNA_steps<-apply(data,1,FixMissing)
#head(zeroNA_steps,10)
#zeroNA_steps<-as.numeric(zeroNA_steps)
#zeroNA_steps<-data.frame(zeroNA_steps)
#newData$steps<-zeroNA_steps$zeroNA_steps
#newData$steps<-as.numeric(newData$steps)
#sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
#hist(sumStepsDaysNew)
#meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
#medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
head(newData,10)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData[,"steps"]<-apply(data,1,FixMissing)
#zeroNA_steps<-apply(data,1,FixMissing)
#head(zeroNA_steps,10)
#zeroNA_steps<-as.numeric(zeroNA_steps)
#zeroNA_steps<-data.frame(zeroNA_steps)
#newData$steps<-zeroNA_steps$zeroNA_steps
#newData$steps<-as.numeric(newData$steps)
#sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
#hist(sumStepsDaysNew)
#meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
#medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
head(newData,10)
averageStepsDays<-data.frame(averageStepsDays)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData[,"steps"]<-apply(data,1,FixMissing)
#zeroNA_steps<-apply(data,1,FixMissing)
#head(zeroNA_steps,10)
#zeroNA_steps<-as.numeric(zeroNA_steps)
#zeroNA_steps<-data.frame(zeroNA_steps)
#newData$steps<-zeroNA_steps$zeroNA_steps
#newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum,na.rm = TRUE))
hist(sumStepsDaysNew)
meanStepsNew<-mean(sumStepsDaysNew,na.rm = TRUE)
medianStepsNew<-median(sumStepsDaysNew,na.rm = TRUE)
head(newData,10)
#1. load the data
data <-read.csv("activity.csv")
#remove NA values
data$date<-as.Date(data$date)
#What is mean total number of steps taken per day?
sumStepsDays<-with(data,tapply(steps,date,sum))
hist(sumStepsDays)
mean(sumStepsDays)
median(sumStepsDays)
## What is the average daily activity pattern?
averageStepsDays<-with(data,tapply(steps,interval,mean,na.rm = TRUE))
intervals<-unique(data$interval)
plot(intervals,averageStepsDays,type = "l")
title("average daily activity pattern")
averageStepsDays<-data.frame(averageStepsDays)
colnames(averageStepsDays)<-"Average"
maxSteps<-which.max(averageStepsDays$Average)
averageStepsDays[maxSteps,]
#modify missing values: stratergy is: use the mean/median for  that 5-minute interval, or the mean for that 5-minute interval, etc
#calcuate mean of everyday
Meansteps1Days<-with(data,tapply(steps,date,mean,na.rm = TRUE))
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["steps"]<-apply(data,1,FixMissing)
newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum))
hist(sumStepsDaysNew)
#data2<-apply(data,1,function(x) if(is.na(x["steps"])) print(averageStepsDays[as.character(x["interval"]),"Average"]))
#apply(data,1,function(x) if(is.na(x["steps"])) print("found"))
newData["Weekdays"]<-ifelse(weekdays(newData$date)=="Saturday" |weekdays(newData$date)=="Sunday","Weekend","weekdays")
#calculate weekday average
newData<-data.frame(newData)
weekMean<-aggregate(x=newData$steps,by=list(interval=newData$interval, Weekdays=newData$Weekdays), FUN=mean)
library(ggplot2)
ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+ xlab("5 minute interval") + ylab("average number of steps")
library(lattice)
xyplot(x ~ interval | weekdays, weekMean, layout=c(1,2),
type="l",main = "Time Series Plot", xlab="5-minute Intervals", ylab="Avg Steps")
View(newData)
View(newData)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x$steps)) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["steps"]<-apply(data,1,FixMissing)
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["steps"]<-apply(data,1,FixMissing)
View(newData)
View(newData)
newData["steps"]<-apply(newData,1,FixMissing)
View(newData)
View(newData)
newData["NA_marker"]<-is.na(newData["steps"])
View(newData)
View(newData)
newData<-data
newData["NA_marker"]<-is.na(newData["steps"])
View(newData)
View(newData)
FixMissing2 <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(x["NA_marker"]) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["NA_marker"]<-is.na(newData["steps"])
newData["steps"]<-apply(newData,1,FixMissing2)
View(newData)
View(newData)
FixMissing2 <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
x["NA_marker"]
if(x["NA_marker"]) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["NA_marker"]<-is.na(newData["steps"])
newData["steps"]<-apply(newData,1,FixMissing2)
FixMissing2 <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
x["NA_marker"]
if(x["NA_marker"]==1) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["NA_marker"]<-is.na(newData["steps"])
newData["steps"]<-apply(newData,1,FixMissing2)
View(newData)
View(newData)
FixMissing2 <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
pint(x["NA_marker"])
if(x["NA_marker"]==1) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["NA_marker"]<-is.na(newData["steps"])
newData["steps"]<-apply(newData,1,FixMissing2)
FixMissing2 <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
print(x["NA_marker"])
if(x["NA_marker"]==1) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["NA_marker"]<-is.na(newData["steps"])
newData["steps"]<-apply(newData,1,FixMissing2)
View(weekMean)
View(newData)
install.packages("knitr")
install.packages("knitr")
View(averageStepsDays)
View(averageStepsDays)
newData<-data.frame(newData)
newData["Weekdays"]<-ifelse(weekdays(newData$date)=="Saturday" |weekdays(newData$date)=="Sunday","Weekend","weekdays")
#newData<-data.frame(newData)
weekMean<-aggregate(x=newData$steps,by=list(interval=newData$interval, Weekdays=newData$Weekdays), FUN=mean)
#ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+ xlab("5 minute interval") + ylab("average number of steps")
library(lattice)
weekMean <- aggregate(steps ~ interval + Weekdays, newData, mean)
xyplot(steps ~ interval | Weekdays, weekMean, type = "l", layout
= c(1, 2), xlab = "5min Interval", ylab = "Averaged Number of steps")
View(weekMean)
View(weekMean)
View(newData)
View(newData)
#1. load the data
data <-read.csv("activity.csv")
#remove NA values
data$date<-as.Date(data$date)
#What is mean total number of steps taken per day?
sumStepsDays<-with(data,tapply(steps,date,sum))
hist(sumStepsDays)
mean(sumStepsDays)
median(sumStepsDays)
## What is the average daily activity pattern?
averageStepsDays<-with(data,tapply(steps,interval,mean,na.rm = TRUE))
intervals<-unique(data$interval)
plot(intervals,averageStepsDays,type = "l")
title("average daily activity pattern")
averageStepsDays<-data.frame(averageStepsDays)
colnames(averageStepsDays)<-"Average"
maxSteps<-which.max(averageStepsDays$Average)
averageStepsDays[maxSteps,]
#modify missing values: stratergy is: use the mean/median for  that 5-minute interval, or the mean for that 5-minute interval, etc
#calcuate mean of everyday
Meansteps1Days<-with(data,tapply(steps,date,mean,na.rm = TRUE))
FixMissing <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
if(is.na(x["steps"])) {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
FixMissing2 <- function(x) {
xlabel<-as.character(as.numeric(x["interval"]))
print(x["NA_marker"])
if(x["NA_marker"]==" TRUE") {
return(as.numeric(averageStepsDays[xlabel,"Average"])) }
else {
return(x["steps"])
}
}
newData<-data
newData["steps"]<-apply(newData,1,FixMissing2)
newData$steps<-as.numeric(newData$steps)
sumStepsDaysNew<-with(newData,tapply(steps,date,sum))
hist(sumStepsDaysNew)
#data2<-apply(data,1,function(x) if(is.na(x["steps"])) print(averageStepsDays[as.character(x["interval"]),"Average"]))
#apply(data,1,function(x) if(is.na(x["steps"])) print("found"))
newData["Weekdays"]<-ifelse(weekdays(newData$date)=="Saturday" |weekdays(newData$date)=="Sunday","Weekend","weekdays")
#calculate weekday average
newData<-data.frame(newData)
weekMean<-aggregate(x=newData$steps,by=list(interval=newData$interval, Weekdays=newData$Weekdays), FUN=mean)
library(ggplot2)
ggplot(weekMean, aes(interval,x))+ geom_line()+facet_grid(Weekdays~.)+ xlab("5 minute interval") + ylab("average number of steps")
library(lattice)
weekMean <- aggregate(steps ~ interval + Weekdays, newData, mean)
xyplot(steps ~ interval | Weekdays, weekMean, type = "l", layout
= c(1, 2), xlab = "5min Interval", ylab = "Averaged Number of steps")
View(weekMean)
View(weekMean)
